---
layout: post
title:  "Week 1"
date:   2014-09-05 09:22:44
categories: bikeshare
---

I got the data from Bike Share data in `2nd quarter of 2014` from [Capital Bike Share](http://www.capitalbikeshare.com/trip-history-data).

* Duration and Time
  * The data comes from rides between `4/1/2014` and `7/1/2014`.
  * In those `91` days, There are `903634` rides in total.
  * The total riding time is `288206.6 hours`, averaging `19.517 min` per ride.


  * Duration

![Distribution of Duration](https://github.com/yunhaolucky/yunhaolucky.github.io/blob/master/assets/bikeshare/week1/distributionofduration.png?raw=true)

The distribution of duration(secs) has a large number of occurrences between (0, 2000). It has a peek around 800 and skewed to the right in the upper value part. Most rides last for less than half an hour(1800s) and the peak of duration is about 15 minutes.

![Distribution of Duration(<10 min)](https://github.com/yunhaolucky/yunhaolucky.github.io/blob/master/assets/bikeshare/week1/distributionofduration10min.png?raw=true)

We notice there is another peak in the distribution of duration. There are more than 1000 people return their bikes within 5 second. My guess is people's malfunctions.

  * Start_date (Distribution of date)

    ```
    Min.        1st Qu.       Median           Mean          3rd Qu.      Max.
"2014-04-01" "2014-04-24" "2014-05-19" "2014-05-17" "2014-06-09" "2014-06-30"
  ```
  ![Distribution of ride date](https://github.com/yunhaolucky/yunhaolucky.github.io/blob/master/assets/bikeshare/week1/distribution_of_Ride_date.png?raw=true)

  The distribution is randomized in some extent but there are several outliers worthy to mention. There are `4` days whose number of rides is smaller than 5000: `"2014-04-07" "2014-04-15" "2014-04-29" "2014-04-30"` and 2 days greater than 13000. `"2014-04-12" "2014-04-13"`.

  * Start Time (Distribution of start time )

  ```
  Min.      1st Qu.       Median      Mean    3rd Qu.     Max.
"00:00:00" 10:58:00" "15:27:00" "14:41:51" "18:22:00" "23:59:00"
```
  ![Distribution of ride time](https://github.com/yunhaolucky/yunhaolucky.github.io/blob/master/assets/bikeshare/week1/distribution_of_ride_time.png?raw=true)

  Most of the ride are taken between `7am` and `8pm`, with two peaks at `8am` and `5-6pm`.
  The number of rides from `23pm` to `5am` is relatively small.

* Stations
  * There are `321` stations.
  * The distribution of number of starting rides of each station is positively skewed.
    * average is `2815.59`
    * standard deviation is `3290.818`
    * Top Five Start stations are: (# of rides)
      * "Lincoln Memorial" `(20338)`,
      * "Massachusetts Ave & Dupont Circle NW"`(19652)`,
      * "Columbus Circle / Union Station"`(19163)`,
      * "Jefferson Dr & 14th St SW" `(17585)`,
      * "15th & P St NW" `(12815)`
  * The distribution of number of ending of each station is positively skewed.
    * average is `2815.044`
    * standard deviation is `3443.536`
  * In & Out difference for each station( `# of start rides - # of end rides`)
    * Average `< 0.0001`
    ![Distribution of ride time](https://github.com/yunhaolucky/yunhaolucky.github.io/blob/master/assets/bikeshare/week1/distribution_in_out.png?raw=true)
    ![Distribution of ride time](https://github.com/yunhaolucky/yunhaolucky.github.io/blob/master/assets/bikeshare/week1/hist_in_out.png?raw=true)

        The difference of In-rides and Out-rides of each station is ploted in the above figure. Most of the stations have a good balance between in and out while there also exist some extreme points.
    * Top Five In Out difference `(In - Out)`
      * "16th & Harvard St NW" `(3096)`
      * "14th & Harvard St NW" `(1694)`
      * "Columbia Rd & Belmont St NW" `(1514)`
      * "39th & Calvert St NW / Stoddert"`(1386)`
      * "Adams Mill & Columbia Rd NW" `(1298)`

```r
############ Read Data from .csv ############
q2data = read.csv("~/Downloads/2014-Q2-Trips-History-Data.csv")
############ Duration #############
duration = q2data$Duration
duration = as.difftime(duration,"%Hh %Mm %Ss",units="secs")
#sum of duration
sum(duration, na.rm = TRUE)
#histogram of duration
duration_numeric = as.numeric(duration)
hist(duration_numeric, breaks=8000,xlim=c(0,8000),main="Distribution of Duration")
########## Date ##############
# get the date of all rides
startdate = as.Date(starttime,"%m/%d/%Y %H:%M")
# create distribution table
freqs = aggregate(startdate, by=list(startdate),FUN=length)
#histogram
ggplot(freqs, aes(x=Group.1,y=x)) + geom_bar(stat = "identity") + scale_x_date(breaks="1 month")+xlab("Date")+ylab("Frequency")+ggtitle("Distribution of Start time")
#Get the outliers
upperoutliers = freqs[1][which(freqs[2] > 13000),1]
loweroutliers = freqs[1][which(freqs[2] < 5000),1]
######## Weekday #########
barplot(table(factor(weekdays(startdate),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))))
######## Time ##########
hour = format(strptime(starttime,"%m/%d/%Y %H:%M"),"%H")
freq_hour = aggregate(hour, by=list(hour),FUN=length)
#plot hisrogram of hour
ggplot(freq_hour, aes(x=Group.1,y=x)) + geom_bar(stat = "identity")+xlab("Hour")+ylab("Frequency")+ggtitle("Distribution of Ride Start time")
#Function : get hour field of a DATETIME instance
gethour = function(datetime){ hour = as.numeric(format(strptime(datetime,"%m/%d/%Y %H:%M"),"%H"));return(hour)}
######## Station ########
instation = q2data$Start.terminal
outstation = q2data$Start.terminal
freqs_in = aggregate(instation, by=list(instation),FUN=length)
freqs_out = aggregate(outstation, by=list(outstation),FUN=length)
in_out = cbind(freqs_in,freqs_out)
in_out[3] = NULL
in_out[4] = in_out[3] - in_out[2]
l = list(in_out[4])
hist(unlist(l),breaks = 100, main = "Histogram of #(In - Out)",xlab = "#(In - Out)")
```
